---
AWSTemplateFormatVersion: "2010-09-09"
Description: GitLab Actions - OIDC IDP and associated Roles for Full CICD

Parameters:

  pGroupName:
    Type: String
    Description: This is the GitLab group name. If using multiple groups, list the full path for the group(s)
    Default: ""

  pRepositoryName:
    Type: String
    Description: The repo(s) these roles will have access to. (Use * for all repos within the group)
    Default: "*"

  pBranchName:
    Type: String
    Description: The repo(s) these roles will have access to. (Use * to allow all branches)
    Default: "*"

  pRoleName:
    Type: String
    Description: Name the Role
    Default: ""

  UseExistingProvider:
    Type: String
    Description: "Only one GitHub Provider can exists. Choose yes if one is already present in account"
    Default: "no"
    AllowedValues:
      - "yes"
      - "no"

Conditions:

  CreateProvider: !Equals [!Ref UseExistingProvider, "no"]

Resources:

  IdpGitLabOidc:
    Condition: CreateProvider
    Type: AWS::IAM::OIDCProvider
    Properties:
      Url: https://gitlab.com
      ClientIdList:
        - sts.amazonaws.com
      ThumbprintList:
        - B3DD7606D2B5A8B4A13771DBECC9EE1CECAFA38A
      Tags:
      - Key: Name
        Value: !Sub ${pRoleName}-GL-OIDC-Provider

  RoleDeploy:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${pRoleName}-Deploy
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Action: sts:AssumeRoleWithWebIdentity
            Principal:
              Federated: !If
                - CreateProvider
                - !Ref IdpGitLabOidc
                - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:oidc-provider/gitlab.example.com
            Condition:
              StringEquals:
                token.actions.githubusercontent.com:aud: "sts.amazonaws.com"
              StringLike:
                gitlab.example.com:sub: !Sub project_path:${pGroupName}/${pRepositoryName}:ref_type:branch:ref:${pBranchName}
      ManagedPolicyArns:
        - !Sub arn:${AWS::Partition}:iam::aws:policy/ReadOnlyAccess
        - !Sub arn:${AWS::Partition}:iam::aws:policy/AdministratorAccess
        - !Sub arn:${AWS::Partition}:iam::aws:policy/AWSCloudFormationFullAccess
      Policies:
        -
          PolicyName: S3-Allow
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid: S3Actions
                Effect: Allow
                Action:
                  - s3:ListBucket
                  - s3:GetObject
                Resource:
                  - !Sub 'arn:${AWS::Partition}:s3:::*'
                  - !Sub 'arn:${AWS::Partition}:s3:::*/*'

Outputs:

  IdpGitHubOidc:
    Condition: CreateProvider
    Description: "ARN of Github OIDC Provider"
    Value: !GetAtt IdpGitLabOidc.Arn

  RoleDeployARN:
    Description: "ARN of Read Only Access Role for GitHub Actions"
    Value: !GetAtt RoleDeploy.Arn
